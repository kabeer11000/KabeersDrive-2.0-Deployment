{"version":3,"sources":["functions/IconDictionary.js","components/HomeSubComponents/FileCardComponent/FileCardElement.js","components/HomeSubComponents/FileCardComponent/FileInfoDialog.js","components/HomeSubComponents/FileCardComponent/FileCardComponent.js"],"names":["detectIcon","type","imageErrorSrc","FileCardComponent","props","useMediaQuery","item","iconJSX","history","useHistory","recent","Card","className","elevation","Box","width","onDoubleClick","selecting","highlight","setCurrentlySelecting","files","onClick","push","id","Checkbox","disableRipple","onChange","e","target","checked","filter","file","disabled","readOnly","find","checkedIcon","ButtonBase","Paper","style","minWidth","maxWidth","minHeight","backgroundImage","thumbnail","backgroundSize","backgroundRepeat","borderColor","Fade","in","backgroundColor","position","opacity","icon","pr","display","disableTouchRipple","marginTop","Typography","noWrap","gutterBottom","name","flex","IconButton","height","setFileInfo","MoreVert","GridListTile","objectFit","color","Fragment","alt","loading","src","onError","onerror","Grow","GridListTileBar","title","actionIcon","defaultProps","memo","pure","Transition","React","forwardRef","ref","Slide","direction","FileInfoDialog","folder","Dialog","fullScreen","open","onClose","handleClose","TransitionComponent","top","AppBar","Toolbar","edge","aria-label","Close","List","ListSubheader","ListItem","disableGutters","ListItemIcon","ListItemText","Divider","button","Share","primary","secondary","ListItemSecondaryAction","fileShared","mime","metaData","useStyles","makeStyles","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","subheader","palette","background","appBar","grow","flexGrow","fabButton","zIndex","left","right","margin","FilesComponent","mainDialog","useDialog","classes","useState","fileInfo","drawerOpen","setDrawerOpen","fileDetailsDialog","setFileDetailsDialog","currentlySelecting","setCurrentFileInfo","useEffect","window","addEventListener","scrollLoadMore","removeEventListener","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","console","log","Grid","container","alignItems","map","index","key","xs","xl","sm","md","FileCardElement","GridList","cellHeight","gridList","Drawer","variant","anchor","ModalProps","keepMounted","onOpen","component","Link","to","OpenInNew","downloadFile","GetApp","hidden","owner","user","user_id","confirm","message","then","a","handleFileDelete","fileDeleteOne","Delete","Info","Create","ScreenShare","FormControlLabel","control","Switch","defaultChecked","label","length","deleteManyFiles","handleBulkFileDelete","findIndex","f","dialog"],"mappings":"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","file":"static/js/16.7b913c5c.chunk.js","sourcesContent":["import {BrokenImage, Code, Image, InsertDriveFile, Movie, PictureAsPdf, Subject} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport {endPoints} from \"../api/EndPoints\";\r\n\r\nexport const IconDictionary = {\r\n    image: [\r\n        \"image/png\",\r\n        \"image/jpg\",\r\n        \"image/jpeg\",\r\n        \"image/gif\",\r\n        \"image/svg\",\r\n        \"image/svg+xml\",\r\n    ],\r\n    video: [\r\n        \"video/ogg\",\r\n        \"video/m4a\",\r\n        \"video/ogg\",\r\n        \"video/mov\",\r\n        \"video/mp4\"\r\n    ],\r\n    code: [\r\n        \"text/css\",\r\n        \"text/x-php\",\r\n        \"text/html\",\r\n        \"text/xhtml\",\r\n        \"text/javscript\"\r\n    ],\r\n    doc: [\r\n        \"application/vnd.ms-powerpoint\",\r\n        \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\r\n        \"application/rtf\",\r\n        \"application/msword\",\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n    ],\r\n    txt: [\r\n        \"text/plain\",\r\n\r\n    ],\r\n    pdf: [\r\n        \"application/pdf\",\r\n        \"application/x-pdf\",\r\n    ],\r\n    none: []\r\n};\r\nexport const detectIcon = (type) => {\r\n    switch (type) {\r\n        case \"image\":\r\n            return <Image/>;\r\n        case \"video\":\r\n            return <Movie/>;\r\n        case \"code\":\r\n            return <Code/>;\r\n        case \"document\":\r\n            return <InsertDriveFile/>;\r\n        case \"text\":\r\n            return <Subject/>;\r\n        case \"pdf\":\r\n            return <PictureAsPdf/>;\r\n        default:\r\n            return <BrokenImage/>;\r\n    }\r\n};\r\nexport const detectMime = (file) => {\r\n    const driveRawPath = `http://drive.hosted-kabeersnetwork.unaux.com/user-files`;\r\n    switch (true) {\r\n        case IconDictionary.image.includes(file.mime):\r\n            return {\r\n                \"data-type\": \"image\",\r\n                \"data-src\": `${driveRawPath}/${file.path}`\r\n            };\r\n        case IconDictionary.video.includes(file.mime):\r\n            return {\r\n                \"data-type\": \"video\",\r\n                \"data-src\": `${driveRawPath}/${file.path}`\r\n            };\r\n        case IconDictionary.code.includes(file.mime):\r\n            return {\r\n                \"data-type\": \"iframe\",\r\n                \"data-src\": endPoints.textFileViewer(file.id)\r\n            };\r\n        case IconDictionary.doc.includes(file.mime):\r\n            return {\r\n                \"data-type\": \"iframe\",\r\n                \"data-src\": endPoints.documentViewer(file.path)\r\n            };\r\n        case IconDictionary.txt.includes(file.mime):\r\n            return {\r\n                \"data-type\": \"iframe\",\r\n                \"data-src\": endPoints.textFileViewer(file.id)\r\n            };\r\n        case IconDictionary.pdf.includes(file.mime):\r\n            return {\r\n                \"data-type\": \"iframe\",\r\n                \"data-src\": endPoints.documentViewer(file.path)\r\n            };\r\n        default:\r\n            return {\r\n                \"data-type\": \"iframe\",\r\n                \"data-src\": endPoints.noPreviewAvailable(file.id)\r\n            };\r\n    }\r\n};\r\n","import {pure} from \"recompose\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport {detectIcon} from \"../../../functions/IconDictionary\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {MoreVert} from \"@material-ui/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, {memo} from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\nconst imageErrorSrc = 'https://cdn.jsdelivr.net/gh/kabeer11000/docs-hosted@main/drive/app/fallback/image-error/texture-black-48dp.svg';\r\n\r\nconst FileCardComponent = (props) => {\r\n    const isMobile = useMediaQuery(`@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3)`);\r\n    props.item.iconJSX = detectIcon(props.item[\"type\"]);\r\n    const history = useHistory();\r\n    return props.recent ? (\r\n        <Card className={`bg-transparent mx-3 my-3`} elevation={0}>\r\n            <Box width={\"100%\"}\r\n                 onDoubleClick={() => props.selecting.highlight ? null : props.setCurrentlySelecting(!props.selecting.highlight, [...props.selecting.files, props.item])}>\r\n                <div\r\n                    onClick={() => !props.selecting.highlight ? history.push(`/view/${props.item.id}`) : null}>\r\n                    <Checkbox\r\n                        disableRipple\r\n                        onChange={(e) => props.setCurrentlySelecting(props.selecting.highlight, e.target.checked ? [...props.selecting.files, props.item] : [...props.selecting.files.filter(file => file.id !== props.item.id)])}\r\n                        disabled={!props.selecting.highlight} readOnly={!props.selecting.highlight}\r\n                        checked={!!props.selecting.files.find(file => file.id === props.item.id)}\r\n                        className={\"p-0 m-0\"}\r\n                        checkedIcon={\r\n                            <Box>\r\n                                <ButtonBase>\r\n                                    <Paper style={{\r\n                                        minWidth: \"17.9rem\",\r\n                                        maxWidth: \"18rem\",\r\n                                        minHeight: \"10rem\",\r\n                                        backgroundImage: `url(${props.item.thumbnail || \"https://picsum.photos/210/118\"})`,\r\n                                        backgroundSize: \"cover\",\r\n                                        backgroundRepeat: \"no-repeat\",\r\n                                        borderColor: \"white\"\r\n                                    }}/>\r\n                                    <Fade in={true}>\r\n                                        <div\r\n                                            className={\"rounded\"}\r\n                                            style={{\r\n                                                minWidth: \"17.9rem\",\r\n                                                maxWidth: \"18rem\",\r\n                                                minHeight: \"10rem\",\r\n                                                backgroundColor: \"#E8F0FE\",\r\n                                                position: \"absolute\",\r\n                                                opacity: 0.5\r\n                                            }}/>\r\n                                    </Fade>\r\n                                </ButtonBase>\r\n                            </Box>\r\n                        }\r\n                        icon={\r\n                            <Box>\r\n                                <ButtonBase>\r\n                                    <Paper style={{\r\n                                        minWidth: \"18rem\",\r\n                                        maxWidth: \"18rem\",\r\n                                        minHeight: \"10rem\",\r\n                                        backgroundImage: `url(${props.item.thumbnail || \"https://picsum.photos/210/118\"})`,\r\n                                        backgroundSize: \"cover\",\r\n                                        backgroundRepeat: \"no-repeat\"\r\n                                    }}/>\r\n                                </ButtonBase>\r\n                            </Box>\r\n                        }\r\n                    />\r\n                </div>\r\n                <Box pr={2} style={{display: \"flex\"}} className={\"mt-\"}>\r\n                    <ButtonBase disableRipple disableTouchRipple>\r\n                        <div className={\"mr-2\"} style={{marginTop: \"0.30rem\"}}>\r\n                            {props.item.iconJSX}\r\n                        </div>\r\n                        <Typography noWrap gutterBottom className={`text-truncate mt-2`}>\r\n                            {props.item.name}\r\n                        </Typography>\r\n                    </ButtonBase>\r\n                    <div style={{flex: \"1 1 auto\"}}/>\r\n                    <IconButton style={{width: \"1rem\", height: \"1rem\"}} className={\"mt-2 mx-0\"}\r\n                                onClick={() => props.setFileInfo(props.item)}>\r\n                        <MoreVert className={\"mx-0 px-0\"}/>\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n        </Card>\r\n    ) : (\r\n        <GridListTile className={\"rounded\"} style={{objectFit: \"cover\", width: \"100%\", height: \"100%\"}}>\r\n            <ButtonBase style={{objectFit: \"cover\", width: \"100%\", height: \"100%\"}} disableRipple>\r\n                <Box style={{objectFit: \"cover\", width: \"100%\", height: \"100%\"}}\r\n                     className={\"rounded\"}\r\n                     onDoubleClick={() => props.selecting.highlight ? null : props.setCurrentlySelecting(!props.selecting.highlight, [...props.selecting.files, props.item])}>\r\n                    <div onClick={() => !props.selecting.highlight ? history.push(`/view/${props.item.id}`) : null}>\r\n                        <Checkbox\r\n                            disableRipple={false}\r\n                            onChange={(e) => props.setCurrentlySelecting(props.selecting.highlight, e.target.checked ? [...props.selecting.files, props.item] : [...props.selecting.files.filter(file => file.id !== props.item.id)])}\r\n                            disabled={!props.selecting.highlight} readOnly={!props.selecting.highlight}\r\n                            checked={!!props.selecting.files.find(file => file.id === props.item.id)}\r\n                            className={\"p-0 m-0 rounded\"}\r\n                            color={\"default\"}\r\n                            style={{\r\n                                objectFit: \"cover\",\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                                minWidth: \"8.35rem\",\r\n                                minHeight: \"8.35rem\"\r\n                            }}\r\n                            checkedIcon={\r\n                                <React.Fragment>\r\n                                    <div style={{\r\n                                        position: \"absolute\",\r\n                                    }} className={\"w-100 h-100\"}>\r\n                                        <img alt={\"\"} loading={\"lazy\"}\r\n                                             className={\"w-100 h-100\"}\r\n                                             style={{objectFit: \"cover\"}}\r\n                                             src={props.item.thumbnail}\r\n                                             onError={(e) => (e.target.onerror = null, e.target.src = imageErrorSrc)}\r\n                                        />\r\n                                    </div>\r\n                                    <div\r\n                                        style={{\r\n                                            minHeight: \"100%\",\r\n                                            minWidth: \"100%\",\r\n                                            backgroundImage: \"linear-gradient(to top, rgba(0,0,0,0.65) 0%,rgba(0,0,0,0) 100%)\",\r\n                                            position: \"absolute\"\r\n                                        }}/>\r\n                                    <Grow in={true}>\r\n                                        <div\r\n                                            className={\"rounded\"}\r\n                                            style={{\r\n                                                minHeight: \"100%\",\r\n                                                minWidth: \"100%\",\r\n                                                backgroundColor: \"#E8F0FE\",\r\n                                                position: \"absolute\",\r\n                                                opacity: 0.5\r\n                                            }}/>\r\n                                    </Grow>\r\n                                </React.Fragment>\r\n                            }\r\n                            icon={\r\n                                <React.Fragment>\r\n                                    <div style={{\r\n                                        position: \"absolute\",\r\n                                    }} className={\"w-100 h-100\"}>\r\n                                        <img alt={\"\"} loading={\"lazy\"}\r\n                                             className={\"w-100 h-100\"}\r\n                                             style={{\r\n                                                 objectFit: \"cover\",\r\n                                                 minHeight: \"100%\",\r\n                                                 minWidth: \"100%\",\r\n                                             }}\r\n                                             src={props.item.thumbnail}\r\n                                             onError={(e) => (e.target.onerror = null, e.target.src = imageErrorSrc)}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{\r\n                                        minHeight: \"100%\",\r\n                                        minWidth: \"100%\",\r\n                                        backgroundImage: \"linear-gradient(to top, rgba(0,0,0,0.65) 0%,rgba(0,0,0,0) 100%)\",\r\n                                        position: \"absolute\"\r\n                                    }}/>\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <GridListTileBar\r\n                        className={\"bg-transparent ml-1\"}\r\n                        title={\r\n                            <Box pr={2} style={{display: \"flex\",}} className={\"px-0\"}>\r\n                                <div className={\"mr-2\"}>\r\n                                    {props.item.iconJSX}\r\n                                </div>\r\n                                <Typography noWrap gutterBottom className={`text-truncate`}>\r\n                                    {props.item.name}\r\n                                </Typography>\r\n                                <div style={{flex: \"1 1 auto\"}}/>\r\n                            </Box>\r\n                        }\r\n                        actionIcon={\r\n                            <IconButton onClick={() => props.setFileInfo(props.item)}>\r\n                                <MoreVert/>\r\n                            </IconButton>\r\n                        }\r\n                    />\r\n                </Box>\r\n            </ButtonBase>\r\n        </GridListTile>\r\n    );\r\n};\r\nFileCardComponent.propTypes = {\r\n    item: PropTypes.object.isRequired,\r\n    recent: PropTypes.bool\r\n};\r\nFileCardComponent.defaultProps = {};\r\nexport default memo(pure(FileCardComponent));\r\n//export default pure(FileCardComponent);\r\n","import React from \"react\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport {pure} from \"recompose\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Close, Share} from \"@material-ui/icons\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"left\" ref={ref} {...props} />);\r\nconst FileInfoDialog = (props) => {\r\n    if (!props.file || !props.folder) return null;\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={props.open} onClose={props.handleClose} TransitionComponent={Transition}>\r\n                <div className={\"parallax\"}>\r\n                    <div className={\"parallax__layer parallax__layer--back h-100\"}\r\n                         style={{top: 0}}>\r\n                        <AppBar position={\"absolute\"} className={\"bg-transparent\"} elevation={0}>\r\n                            <Toolbar>\r\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={props.handleClose} aria-label=\"close\">\r\n                                    <Close/>\r\n                                </IconButton>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <Paper elevation={0} style={{backgroundColor: \"#FAFAFA\"}}>\r\n                            <React.Fragment>\r\n                                <img alt={props.file.name} src={props.file.thumbnail}\r\n                                     style={{width: \"100%\", height: \"auto\", backgroundColor: \"#FAFAFA\"}}/>\r\n                            </React.Fragment>\r\n                            <div\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"10rem\",\r\n                                    top: 0,\r\n                                    backgroundImage: \"linear-gradient(to bottom, rgba(0,0,0,0.65) 0%,rgba(0,0,0,0) 100%)\",\r\n                                    position: \"fixed\"\r\n                                }}/>\r\n                        </Paper>\r\n                    </div>\r\n                    <Paper className={\"parallax__layer parallax__layer--base mt-5 h-100\"} style={{top: \"10rem\"}}\r\n                           elevation={0}>\r\n                        <List>\r\n                            <ListSubheader>\r\n                                <Paper elevation={0}>\r\n                                    <ListItem disableGutters>\r\n                                        <ListItemIcon>\r\n                                            {props.file.iconJSX}\r\n                                        </ListItemIcon>\r\n                                        <ListItemText>\r\n                                            <Typography noWrap\r\n                                                        className={\"text-truncate\"}>{props.file.name}</Typography>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                </Paper>\r\n                            </ListSubheader>\r\n                            <Divider/>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <Share/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={`File Shared`}\r\n                                              secondary={`Shared Files Can be viewed by anyone who has the link`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    <Checkbox checked={props.file.fileShared} disabled readOnly/>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem button>\r\n                                <ListItemText primary={`Type`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    {props.file.type} {props.file.mime}\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem button>\r\n                                <ListItemText primary={`Location`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    {props.folder.metaData.name}\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem button>\r\n                                <ListItemText primary={`Item Id`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    {props.file.id}\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n};\r\nFileInfoDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n    folder: PropTypes.object.isRequired,\r\n};\r\nFileInfoDialog.defaultProps = {};\r\nexport default pure(FileInfoDialog);\r\n","import React, {memo} from 'react';\nimport PropTypes from 'prop-types';\nimport './FileCardComponent.css';\nimport Grid from \"@material-ui/core/Grid\";\nimport {pure} from \"recompose\";\nimport FileCardElement from \"./FileCardElement\";\nimport FileInfoDialog from \"./FileInfoDialog\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport {Link} from \"react-router-dom\";\nimport {Close, Create, Delete, GetApp, Info, OpenInNew, ScreenShare} from \"@material-ui/icons\";\nimport {downloadFile} from \"../../../functions/Misc\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {useDialog} from \"muibox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grow from \"@material-ui/core/Grow\";\nimport {deleteManyFiles, fileDeleteOne} from \"../../../functions/FilesFolders\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n        paddingBottom: 50,\n    },\n    list: {\n        marginBottom: theme.spacing(2),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n        //top: 'auto',\n        //bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\nconst FilesComponent = (props) => {\n\n    const mainDialog = useDialog();\n    const classes = useStyles();\n    const [fileInfo, setFileInfo] = React.useState(null);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const [fileDetailsDialog, setFileDetailsDialog] = React.useState(false);\n    const [currentlySelecting, setCurrentlySelecting] = React.useState({\n        files: [], highlight: false\n    });\n    const setCurrentFileInfo = (file) => {\n        setDrawerOpen(true);\n        setFileInfo(file);\n    };\n    React.useEffect(() => {\n        window.addEventListener('scroll', scrollLoadMore);\n        return () => {\n            window.removeEventListener('scroll', scrollLoadMore);\n        }\n    });\n    const scrollLoadMore = () => (window.innerHeight + document.documentElement.scrollTop === document.scrollingElement.scrollHeight) ? (\n        () => {\n            console.log(\"Scrolled\")\n            // Do load more content here!\n        }\n    ) : null;\n    return (\n        <div>\n            {\n                props.recent ? (\n                    <Grid container spacing={0.5}\n                          direction=\"row\"\n                          alignItems=\"flex-start\">\n                        {\n                            props.folder.files ? props.folder.files.map((file, index) => (\n                                <Grid key={index} item xs={12} xl={2} sm={4} md={2}>\n                                    <FileCardElement\n                                        setCurrentlySelecting={(highlight, files) => {\n                                            setCurrentlySelecting({highlight: highlight, files: [...files]});\n                                        }}\n                                        selecting={currentlySelecting}\n                                        setFileInfo={setCurrentFileInfo}\n                                        item={file} recent={props.recent || false}/>\n                                </Grid>\n                            )) : null\n                        }\n                    </Grid>\n                ) : (\n                    <GridList cellHeight={180} className={`px-1 ${classes.gridList}`}>\n                        {\n                            props.folder.files ? props.folder.files.map((file, index) => (\n                                    <Grid sm={3} md={2} xs={6} xl={2} item key={index}>\n                                        <FileCardElement\n                                            setCurrentlySelecting={(highlight, files) => {\n                                                setCurrentlySelecting({highlight: highlight, files: [...files]});\n                                            }}\n                                            selecting={currentlySelecting}\n                                            setFileInfo={setCurrentFileInfo}\n                                            item={file} recent={props.recent || false}/>\n                                    </Grid>\n                                )\n                            ) : null\n                        }\n                    </GridList>\n                )\n            }\n            {fileInfo ? (\n                <React.Fragment>\n                    <FileInfoDialog open={fileDetailsDialog} handleClose={() => setFileDetailsDialog(false)}\n                                    file={fileInfo}\n                                    folder={props.folder}/>\n                </React.Fragment>\n            ) : null}\n            <Drawer\n                variant=\"temporary\"\n                anchor={\"bottom\"}\n                onClose={() => setDrawerOpen(!drawerOpen)}\n                ModalProps={{keepMounted: true}}\n                open={drawerOpen}\n                onOpen={() => setDrawerOpen(!drawerOpen)}\n                onClick={() => setDrawerOpen(!drawerOpen)}\n            >\n                {\n                    !fileInfo ? null : (\n                        <React.Fragment>\n                            <ListItem>\n                                <ListItemIcon>{fileInfo.iconJSX}</ListItemIcon>\n                                <ListItemText>\n                                    <Typography className={\"text-truncate\"} noWrap>{fileInfo.name}</Typography>\n                                </ListItemText>\n                            </ListItem>\n                            <Divider/>\n                            <List>\n                                <ListItem button component={Link} to={`/view/${fileInfo.id}`}>\n                                    <ListItemIcon><OpenInNew/></ListItemIcon>\n                                    <ListItemText primary={\"View\"}/>\n                                </ListItem>\n                                <ListItem button onClick={() => downloadFile(fileInfo)}>\n                                    <ListItemIcon><GetApp/></ListItemIcon>\n                                    <ListItemText primary={\"Download\"}/>\n                                </ListItem>\n                                <ListItem hidden={props.folder.owner !== window.user.user_id} button\n                                          onClick={() => mainDialog.confirm({\n                                              title: <Typography noWrap className={\"text-truncate\"}>Confirm\n                                                  Deleting {fileInfo.name}</Typography>,\n                                              message: ` This Action cannot be reverted`\n                                          })\n                                              .then(async () => {\n                                                  props.handleFileDelete(fileInfo.id);\n                                                  await fileDeleteOne(fileInfo.id);\n                                              })}>\n                                    <ListItemIcon>\n                                        <Delete/>\n                                    </ListItemIcon>\n                                    <ListItemText primary={\"Delete\"}/>\n                                </ListItem>\n                                <Divider variant={\"inset\"}/>\n                                <ListItem button onClick={() => setFileDetailsDialog(true)}>\n                                    <ListItemIcon><Info/></ListItemIcon>\n                                    <ListItemText primary={\"Details and Activity\"}/>\n                                </ListItem>\n                                <ListItem hidden={props.folder.owner !== window.user.user_id} button\n                                          onClick={() => props.handleFileDelete(fileInfo.id)}>\n                                    <ListItemIcon><Create/></ListItemIcon>\n                                    <ListItemText primary={\"Rename\"}/>\n                                </ListItem>\n                                <ListItem hidden={props.folder.owner !== window.user.user_id} button\n                                          onClick={() => props.handleFileDelete(fileInfo.id)}>\n                                    <ListItemIcon><Create/></ListItemIcon>\n                                    <ListItemText primary={\"Rename\"}/>\n                                </ListItem>\n                                <Divider variant={\"inset\"}/>\n                                <ListItem button disabled={props.folder.owner !== window.user.user_id}>\n                                    <ListItemIcon><ScreenShare/></ListItemIcon>\n                                    <ListItemText primary={\"Link Sharing\"}/>\n                                    <ListItemIcon>\n                                        <FormControlLabel\n                                            control={<Switch defaultChecked={fileInfo.fileShared}/>}\n                                            label={\"\"}/>\n                                    </ListItemIcon>\n                                </ListItem>\n                            </List>\n                        </React.Fragment>\n                    )\n                }\n            </Drawer>\n            <Grow in={currentlySelecting.highlight}>\n                <AppBar position=\"fixed\" color=\"primary\" style={{\n                    top: 0\n                }}>\n                    <Toolbar>\n                        <IconButton onClick={() => setCurrentlySelecting({\n                            highlight: false,\n                            files: [],\n                        })} edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\n                            <Close/>\n                        </IconButton>\n                        <Typography variant={\"h6\"}>\n                            {currentlySelecting.files.length} selected\n                        </Typography>\n                        <div className={classes.grow}/>\n                        <IconButton onClick={() => currentlySelecting.files.length ? mainDialog.confirm({\n                            title: <Typography noWrap className={\"text-truncate\"}>\n                                Confirm Deleting {currentlySelecting.files.length} files\n                                from {props.folder.metaData.name}</Typography>,\n                            message: ` This Action cannot be reverted`\n                        })\n                            .then(() => deleteManyFiles(currentlySelecting.files.map(file => file.id))\n                                .then(() => (props.handleBulkFileDelete(props.folder.files.filter(file => currentlySelecting.files.findIndex(f => f.id === file.id))), setCurrentlySelecting({\n                                    dialog: false,\n                                    files: []\n                                })))) : null}>\n                            <Delete/>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n            </Grow>\n        </div>\n    );\n};\nFilesComponent.propTypes = {\n    folder: PropTypes.object.isRequired,\n    recent: PropTypes.bool\n};\nFilesComponent.defaultProps = {};\nexport default memo(pure(FilesComponent));\n"],"sourceRoot":""}