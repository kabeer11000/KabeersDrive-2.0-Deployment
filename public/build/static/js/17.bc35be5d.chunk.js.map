{"version":3,"sources":["components/DrawerComponent/DrawerComponent.js"],"names":["useStyles","makeStyles","theme","root","display","drawerPaper","width","drawer","breakpoints","up","drawerWidth","flexShrink","DrawerComponent","props","classes","React","useContext","DrawerContext","drawerOpen","handleDrawer","userData","Fragment","paper","anchor","open","onClose","onOpen","ModalProps","keepMounted","className","src","account_image","alt","username","primary","secondary","email","onClick","button","component","Link","to","muted","small","Date","getFullYear","children","defaultProps","pure"],"mappings":"6WAmBMA,EAAYC,KAAW,SAACC,GAAD,YAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,YAAa,CACTC,MANY,KAQhBC,QAAM,mBACDL,EAAMM,YAAYC,GAAG,MAAQ,CAC1BH,MAAOI,IACPC,WAAY,IAHd,cAKDT,EAAMM,YAAYC,GAAG,MAAQ,CAC1BH,MAAOI,IACPC,WAAY,IAPd,cASDT,EAAMM,YAAYC,GAAG,MAAQ,CAC1BH,MAlBQ,IAmBRK,WAAY,IAXd,OAeJC,EAAkB,SAACC,GACrB,IAAMC,EAAUd,IADe,EAEIe,IAAMC,WAAWC,KAFrB,mBAExBC,EAFwB,KAEZC,EAFY,KAGzBC,EAAW,GACjB,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CACIP,QAAS,CACLQ,MAAOR,EAAQT,aAEnBkB,OAAQ,OACRC,KAAMN,EACNO,QAAS,kBAAMN,GAAcD,IAC7BQ,OAAQ,kBAAMP,GAAcD,IAC5BS,WAAY,CACRC,aAAa,IAEjB,6BACI,kBAAC,IAAD,CAAMC,UAAWf,EAAQX,MACrB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ2B,IAAKV,EAASW,cAAeC,IAAKZ,EAASa,YAEvD,kBAAC,IAAD,CAAcJ,UAAW,gBAAiBK,QAASd,EAASa,SAC9CE,UAAWf,EAASgB,UAG1C,yBAAKP,UAAW,oBAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMQ,QAASxB,EAAMM,cACjB,kBAAC,IAAD,CAAUmB,QAAM,EAACC,UAAWC,IAAMC,GAAI,SAClC,kBAAC,IAAD,KAAc,kBAAC,IAAD,OACd,kBAAC,IAAD,CAAcP,QAAS,UAE3B,kBAAC,IAAD,CAAUI,QAAM,EAACC,UAAWC,IAAMC,GAAI,cAClC,kBAAC,IAAD,KAAc,kBAAC,IAAD,OACd,kBAAC,IAAD,CAAcP,QAAS,eAE3B,kBAAC,IAAD,CAAUI,QAAM,EAACC,UAAWC,IAAMC,GAAI,YAClC,kBAAC,IAAD,KAAc,kBAAC,IAAD,OACd,kBAAC,IAAD,CAAcP,QAAS,aAE3B,kBAAC,IAAD,CAAUI,QAAM,EAACC,UAAWC,IAAMC,GAAI,UAClC,kBAAC,IAAD,KAAc,kBAAC,IAAD,OACd,kBAAC,IAAD,CAAcP,QAAS,WAE3B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAUI,QAAM,EAACC,UAAWC,IAAMC,GAAI,aAClC,kBAAC,IAAD,KAAc,kBAAC,IAAD,OACd,kBAAC,IAAD,CAAcP,QAAS,cAE3B,kBAAC,IAAD,CAAUI,QAAM,GACZ,kBAAC,IAAD,KAAc,kBAAC,IAAD,OACd,kBAAC,IAAD,CAAcJ,QAAS,cAG/B,kBAAC,IAAD,KACI,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAUI,QAAM,GACZ,kBAAC,IAAD,CAAYI,OAAK,EAACC,OAAK,GACnB,yBAAKd,UAAW,oBAAhB,SAA4C,IAAIe,MAAOC,cAAvD,yBAOpB,8BACKhC,EAAMiC,YAiBvBlC,EAAgBmC,aAAe,GAEhBC,sBAAKpC","file":"static/js/17.bc35be5d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './DrawerComponent.css';\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport {pure} from \"recompose\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {AccountCircle, Favorite, GetApp, History, Home, Settings} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {DrawerContext} from \"../../contexts/Contexts\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawer: {\n        [theme.breakpoints.up(\"xs\")]: {\n            width: drawerWidth + 50,\n            flexShrink: 0,\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            width: drawerWidth + 100,\n            flexShrink: 0,\n        },\n        [theme.breakpoints.up(\"xl\")]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n}));\nconst DrawerComponent = (props) => {\n    const classes = useStyles();\n    const [drawerOpen, handleDrawer] = React.useContext(DrawerContext);\n    const userData = {};\n    return (\n        <React.Fragment>\n            <SwipeableDrawer\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                anchor={\"left\"}\n                open={drawerOpen}\n                onClose={() => handleDrawer(!drawerOpen)}\n                onOpen={() => handleDrawer(!drawerOpen)}\n                ModalProps={{\n                    keepMounted: true,\n                }}>\n                <div>\n                    <List className={classes.root}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src={userData.account_image} alt={userData.username}/>\n                            </ListItemAvatar>\n                            <ListItemText className={\"text-truncate\"} primary={userData.username}\n                                          secondary={userData.email}/>\n                        </ListItem>\n                    </List>\n                    <div className={\"classes.toolbar\"}/>\n                    <Divider/>\n                    <List onClick={props.handleDrawer}>\n                        <ListItem button component={Link} to={\"/home\"}>\n                            <ListItemIcon><Home/></ListItemIcon>\n                            <ListItemText primary={\"Home\"}/>\n                        </ListItem>\n                        <ListItem button component={Link} to={\"/downloads\"}>\n                            <ListItemIcon><GetApp/></ListItemIcon>\n                            <ListItemText primary={\"Downloads\"}/>\n                        </ListItem>\n                        <ListItem button component={Link} to={\"/history\"}>\n                            <ListItemIcon><History/></ListItemIcon>\n                            <ListItemText primary={\"History\"}/>\n                        </ListItem>\n                        <ListItem button component={Link} to={\"/liked\"}>\n                            <ListItemIcon><Favorite/></ListItemIcon>\n                            <ListItemText primary={\"Liked\"}/>\n                        </ListItem>\n                        <Divider/>\n                        <ListItem button component={Link} to={\"/settings\"}>\n                            <ListItemIcon><Settings/></ListItemIcon>\n                            <ListItemText primary={\"Settings\"}/>\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemIcon><AccountCircle/></ListItemIcon>\n                            <ListItemText primary={\"Account\"}/>\n                        </ListItem>\n                    </List>\n                    <List>\n                        <Divider/>\n                        <ListItem button>\n                            <Typography muted small>\n                                <div className={\"text-muted small\"}>&copy; {new Date().getFullYear()} Kabeers Network\n                                </div>\n                            </Typography>\n                        </ListItem>\n                    </List>\n                </div>\n            </SwipeableDrawer>\n            <main>\n                {props.children}\n            </main>\n        </React.Fragment>\n    );\n};\n\nDrawerComponent.propTypes = {\n    drawerOpen: PropTypes.bool.isRequired,\n    handleDrawer: PropTypes.func.isRequired,\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n};\n\nDrawerComponent.defaultProps = {};\n\nexport default pure(DrawerComponent);\n"],"sourceRoot":""}