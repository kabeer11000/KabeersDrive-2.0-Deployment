{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../../../src/lang/en_US.ts","../../../src/lang/zh_CN.ts","../../src/register.ts","../../../src/utils/date.ts","../../../src/utils/dom.ts","../../src/realtime.ts","../../src/index.ts","../../src/timeago-react.tsx","../../src/format.ts","components/HomeSubComponents/FolderCardComponent/FolderInfoDialog.js","components/HomeSubComponents/FolderCardComponent/FolderCardComponent.js"],"names":["CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","locale","diff","unit","ZH_CN","idx","TimeAgo","prototype","Transition","forwardRef","Slide","direction","FolderInfoDialog","folder","Dialog","fullScreen","open","onClose","handleClose","TransitionComponent","style","top","AppBar","position","elevation","Toolbar","IconButton","edge","color","onClick","aria-label","Close","Typography","variant","metaData","flex","Folder","Paper","marginTop","List","ListItem","button","ListItemText","primary","secondary","ListItemSecondaryAction","Checkbox","checked","shared","disabled","readOnly","Divider","immediateParent","id","datetime","Date","created","lastUpdated","defaultProps","memo","pure","FolderCardElement","isMobile","useMediaQuery","Card","noWrap","gutterBottom","textDecoration","item","onOptions","MoreVert","FoldersComponent","useState","folders","contents","folderInfo","setFolderInfo","drawerOpen","setDrawerOpen","folderDetailsDialog","setFolderDetailsDialog","setCurrentFileInfo","Fragment","Grid","container","alignItems","map","index","sm","md","xs","key","Drawer","anchor","ModalProps","keepMounted","ListItemIcon","Link","to","OpenInNew","downloadFile","GetApp","handleFileDelete","Delete","Info","ScreenShare","FormControlLabel","control","Switch","defaultChecked","onChange","e","changeFileLinkSharing","label"],"mappings":"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","file":"static/js/18.378c804a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n//# sourceMappingURL=en_US.js.map","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n//# sourceMappingURL=zh_CN.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n//# sourceMappingURL=register.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n//# sourceMappingURL=date.js.map","var ATTR_TIMEAGO_TID = 'timeago-id';\n/**\n * get the datetime attribute, `datetime` are supported.\n * @param node\n * @returns {*}\n */\nexport function getDateAttribute(node) {\n    return node.getAttribute('datetime');\n}\n/**\n * set the node attribute, native DOM\n * @param node\n * @param timerId\n * @returns {*}\n */\nexport function setTimerId(node, timerId) {\n    // @ts-ignore\n    node.setAttribute(ATTR_TIMEAGO_TID, timerId);\n}\n/**\n * get the timer id\n * @param node\n */\nexport function getTimerId(node) {\n    return parseInt(node.getAttribute(ATTR_TIMEAGO_TID));\n}\n//# sourceMappingURL=dom.js.map","import { setTimerId, getTimerId, getDateAttribute } from './utils/dom';\nimport { formatDiff, diffSec, nextInterval } from './utils/date';\nimport { getLocale } from './register';\n// all realtime timer\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\nvar clear = function (tid) {\n    clearTimeout(tid);\n    delete TIMER_POOL[tid];\n};\n// run with timer(setTimeout)\nfunction run(node, date, localeFunc, opts) {\n    // clear the node's exist timer\n    clear(getTimerId(node));\n    var relativeDate = opts.relativeDate, minInterval = opts.minInterval;\n    // get diff seconds\n    var diff = diffSec(date, relativeDate);\n    // render\n    node.innerText = formatDiff(diff, localeFunc);\n    var tid = setTimeout(function () {\n        run(node, date, localeFunc, opts);\n    }, Math.min(Math.max(nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff));\n    // there is no need to save node in object. Just save the key\n    TIMER_POOL[tid] = 0;\n    setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\nexport function cancel(node) {\n    // cancel one\n    if (node)\n        clear(getTimerId(node));\n    // cancel all\n    // @ts-ignore\n    else\n        Object.keys(TIMER_POOL).forEach(clear);\n}\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\nexport function render(nodes, locale, opts) {\n    // by .length\n    // @ts-ignore\n    var nodeList = nodes.length ? nodes : [nodes];\n    nodeList.forEach(function (node) {\n        run(node, getDateAttribute(node), getLocale(locale), opts || {});\n    });\n    return nodeList;\n}\n//# sourceMappingURL=realtime.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n//# sourceMappingURL=index.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { format, cancel, render } from 'timeago.js';\n/**\n * Convert input to a valid datetime string of <time> tag\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time\n * @param input\n * @returns datetime string\n */\nvar toDateTime = function (input) {\n    // let date: Date = new Date();\n    // if (input instanceof Date) {\n    //   date = input;\n    //   //@ts-ignore\n    // } else if (!isNaN(input) || /^\\d+$/.test(input)) {\n    //   //@ts-ignore\n    //   date = new Date(parseInt(input));\n    // } else {\n    //   date = new Date(input);\n    // }\n    // try {\n    //   return date.toISOString();\n    // } catch (e) {\n    //   console.error('invalid datetime');\n    //   return '';\n    // }\n    return '' + (input instanceof Date ? input.getTime() : input);\n};\nvar TimeAgo = /** @class */ (function (_super) {\n    __extends(TimeAgo, _super);\n    function TimeAgo() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.dom = null;\n        return _this;\n    }\n    TimeAgo.prototype.componentDidMount = function () {\n        // fixed #6 https://github.com/hustcc/timeago-react/issues/6\n        // to reduce the file size.\n        // const { locale } = this.props;\n        // if (locale !== 'en' && locale !== 'zh_CN') {\n        //   timeago.register(locale, require('timeago.js/locales/' + locale));\n        // }\n        // render it.\n        this.renderTimeAgo();\n    };\n    TimeAgo.prototype.componentDidUpdate = function () {\n        this.renderTimeAgo();\n    };\n    TimeAgo.prototype.renderTimeAgo = function () {\n        var _a = this.props, live = _a.live, datetime = _a.datetime, locale = _a.locale, opts = _a.opts;\n        // cancel all the interval\n        cancel(this.dom);\n        // if is live\n        if (live !== false) {\n            // live render\n            this.dom.setAttribute('datetime', toDateTime(datetime));\n            render(this.dom, locale, opts);\n        }\n    };\n    // remove\n    TimeAgo.prototype.componentWillUnmount = function () {\n        cancel(this.dom);\n    };\n    // for render\n    TimeAgo.prototype.render = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var _a = this.props, datetime = _a.datetime, live = _a.live, locale = _a.locale, opts = _a.opts, others = __rest(_a, [\"datetime\", \"live\", \"locale\", \"opts\"]);\n        return (React.createElement(\"time\", __assign({ ref: function (c) {\n                _this.dom = c;\n            } }, others), format(datetime, locale, opts)));\n    };\n    TimeAgo.defaultProps = {\n        live: true,\n        className: '',\n    };\n    return TimeAgo;\n}(React.Component));\nexport default TimeAgo;\n//# sourceMappingURL=timeago-react.js.map","import { formatDiff, diffSec } from './utils/date';\nimport { getLocale } from './register';\n/**\n * format a TDate into string\n * @param date\n * @param locale\n * @param opts\n */\nexport var format = function (date, locale, opts) {\n    // diff seconds\n    var sec = diffSec(date, opts && opts.relativeDate);\n    // format it with locale\n    return formatDiff(sec, getLocale(locale));\n};\n//# sourceMappingURL=format.js.map","import React from \"react\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport {pure} from \"recompose\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Close, Folder} from \"@material-ui/icons\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport PropTypes from \"prop-types\";\r\nimport TimeAgo from 'timeago-react';\r\n\r\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"left\" ref={ref} {...props} />);\r\nconst FolderInfoDialog = (props) => {\r\n    if (!props.folder) return null;\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={props.open} onClose={props.handleClose} TransitionComponent={Transition}>\r\n                <div>\r\n                    <div style={{top: 0}}>\r\n                        <AppBar position={\"absolute\"} elevation={0}>\r\n                            <Toolbar>\r\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={props.handleClose} aria-label=\"close\">\r\n                                    <Close/>\r\n                                </IconButton>\r\n                                <Typography variant={\"h6\"}>\r\n                                    {props.folder.metaData.name}\r\n                                </Typography>\r\n                                <div style={{flex: \"1 1 auto\"}}/>\r\n                                <IconButton>\r\n                                    <Folder/>\r\n                                </IconButton>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                    </div>\r\n                    <Paper style={{marginTop: \"3.5rem\"}} elevation={0}>\r\n                        <List>\r\n                            <ListItem button>\r\n                                <ListItemText primary={`Sharing`}\r\n                                              secondary={`Shared Folders Can be viewed by anyone who has the link`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    <Checkbox checked={props.folder.metaData.shared} disabled readOnly/>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem button>\r\n                                <ListItemText primary={`Type`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    Folder\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem button>\r\n                                <ListItemText primary={`Location`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    {props.folder.immediateParent}\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem button>\r\n                                <ListItemText primary={`Folder Id`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    {props.folder.id}\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem button>\r\n                                <ListItemText primary={`Created`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    <TimeAgo datetime={new Date(props.folder.created)}/>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem button>\r\n                                <ListItemText primary={`Last Modified`}/>\r\n                                <ListItemSecondaryAction>\r\n                                    <TimeAgo datetime={new Date(props.folder.lastUpdated)}/>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n};\r\nFolderInfoDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    folder: PropTypes.object.isRequired,\r\n};\r\nFolderInfoDialog.defaultProps = {};\r\nexport default React.memo(pure(FolderInfoDialog));\r\n","import React, {memo} from 'react';\nimport PropTypes from 'prop-types';\nimport './FolderCardComponent.css';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {Delete, Folder, GetApp, Info, MoreVert, OpenInNew, ScreenShare} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {pure} from \"recompose\";\nimport {Link} from \"react-router-dom\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport {downloadFile} from \"../../../functions/Misc\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {changeFileLinkSharing} from \"../../../functions/FilesFolders\";\nimport FolderInfoDialog from \"./FolderInfoDialog\";\n//                    <Skeleton variant=\"rect\" width={210} height={118} />\n// <div style={{zIndex: 2, backgroundImage: \"linear-gradient(to bottom, transparent, rgba(0,0,0,0.25))\", minWidth: 210, width: 210, height: 118}} className={\"rounded\"}/>\n//\n\nconst FolderCardElement = pure((props) => {\n    const isMobile = useMediaQuery(`@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3)`);\n    return (\n        <Card className={`${isMobile ? \"mx-0\" : \"mx-2 my-2\"} py-0`}>\n            <CardContent className={'py-0'}>\n                <div className={\"d-flex\"}>\n                    <Typography noWrap gutterBottom className={`text-truncate mt-2`} style={{textDecoration: 'none'}}\n                                onClick={() => props.onClick(props.item.id)}>\n                        <IconButton><Folder/></IconButton> {props.item.metaData.name}\n                    </Typography>\n                    <div style={{flex: \"1 1 auto\"}}/>\n                    <IconButton onClick={() => props.onOptions(props.item)}><MoreVert/></IconButton>\n                </div>\n            </CardContent>\n        </Card>\n    );\n});\nFolderCardElement.propTypes = {\n    item: PropTypes.object.isRequired\n};\nFolderCardElement.defaultProps = {};\n\n\nconst FoldersComponent = (props) => {\n    const [contents, setContents] = React.useState(props.folders);\n    const [folderInfo, setFolderInfo] = React.useState(null);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const [folderDetailsDialog, setFolderDetailsDialog] = React.useState(false);\n\n    const setCurrentFileInfo = (folder) => {\n        setDrawerOpen(true);\n        setFolderInfo(folder);\n    };\n    const handleDrawerClose = () => {\n        setDrawerOpen(false);\n    };\n    return (\n        <React.Fragment>\n            <Grid container\n                  direction=\"row\"\n                  alignItems=\"flex-start\">\n                {\n                    contents ? contents.map((folder, index) => (\n                        <Grid sm={4} md={4} xs={12} item key={index}>\n                            <FolderCardElement\n                                item={folder} onOptions={setCurrentFileInfo} onClick={props.onClick}/>\n                        </Grid>)) : null\n                }\n            </Grid>\n            {folderInfo ? (\n                <React.Fragment>\n                    <FolderInfoDialog open={folderDetailsDialog} handleClose={() => setFolderDetailsDialog(false)}\n                                      folder={folderInfo}/>\n                </React.Fragment>\n            ) : null}\n            <Drawer\n                variant=\"temporary\"\n                anchor={\"bottom\"}\n                onClose={handleDrawerClose}\n                ModalProps={{keepMounted: true}}\n                open={drawerOpen}\n            >\n                {\n                    folderInfo ? (\n                        <React.Fragment>\n                            <ListItem>\n                                <ListItemIcon><Folder/></ListItemIcon>\n                                <ListItemText>\n                                    <Typography>{folderInfo.metaData.name}</Typography>\n                                </ListItemText>\n                            </ListItem>\n                            <Divider/>\n                            <List>\n                                <ListItem button component={Link} to={`/view/${folderInfo.id}`}>\n                                    <ListItemIcon><OpenInNew/></ListItemIcon>\n                                    <ListItemText primary={\"View\"} secondary={`View ${folderInfo.metaData.name}`}/>\n                                </ListItem>\n                                <ListItem button onClick={() => downloadFile(folderInfo)}>\n                                    <ListItemIcon><GetApp/></ListItemIcon>\n                                    <ListItemText primary={\"Download\"} secondary={`Download ${folderInfo.name}`}/>\n                                </ListItem>\n                                <ListItem button onClick={() => props.handleFileDelete(folderInfo.id)}>\n                                    <ListItemIcon><Delete/></ListItemIcon>\n                                    <ListItemText primary={\"Delete\"} secondary={`Delete ${folderInfo.name}`}/>\n                                </ListItem>\n                                <ListItem button onClick={() => setFolderDetailsDialog(true)}>\n                                    <ListItemIcon><Info/></ListItemIcon>\n                                    <ListItemText primary={\"Details and Activity\"}/>\n                                </ListItem>\n                                <Divider/>\n                                <ListItem>\n                                    <ListItemIcon><ScreenShare/></ListItemIcon>\n                                    <ListItemText primary={\"Link Sharing\"}/>\n                                    <ListItemIcon>\n                                        <FormControlLabel\n                                            control={<Switch defaultChecked={!!+folderInfo.shared}\n                                                             onChange={(e) => changeFileLinkSharing(folderInfo.id, !folderInfo.shared)}/>}\n                                            label={\"\"}/>\n                                    </ListItemIcon>\n                                </ListItem>\n                            </List>\n                        </React.Fragment>\n                    ) : null\n                }\n            </Drawer>\n\n        </React.Fragment>\n    );\n};\nFoldersComponent.propTypes = {};\nFoldersComponent.defaultProps = {};\nexport default memo(pure(FoldersComponent));\n/*\n        {\n            props.item.thumbnail ?\n                <img style={{width: 210, height: 118}} alt={props.item.name} src={props.item.thumbnail}/> :\n                <Skeleton variant=\"rect\" width={210} height={118}/>\n        }\n\n    <Box width={\"100%\"}>\n        <ButtonBase>\n            <Skeleton variant=\"rect\" width={210} height={118} />\n        </ButtonBase>\n        <Box pr={2}>\n            <Typography noWrap gutterBottom variant=\"body2\" className={`text-truncate`}>\n                {props.item.name}\n            </Typography>\n            <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\" className={`text-truncate`}>\n                {\"item.channel\"}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\" className={`text-truncate`}>\n                {`${props.item.mime} • ${props.item.dateCreated}`}\n            </Typography>\n        </Box>\n    </Box>\n */\n"],"sourceRoot":""}